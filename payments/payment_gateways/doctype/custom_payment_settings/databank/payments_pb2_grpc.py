# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import payments_pb2 as payments__pb2


class paymentsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreditAccount = channel.unary_unary(
                '/payments.paymentsService/CreditAccount',
                request_serializer=payments__pb2.requests.SerializeToString,
                response_deserializer=payments__pb2.reply.FromString,
                )
        self.DebitAccount = channel.unary_unary(
                '/payments.paymentsService/DebitAccount',
                request_serializer=payments__pb2.requests.SerializeToString,
                response_deserializer=payments__pb2.reply.FromString,
                )


class paymentsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreditAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DebitAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_paymentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreditAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreditAccount,
                    request_deserializer=payments__pb2.requests.FromString,
                    response_serializer=payments__pb2.reply.SerializeToString,
            ),
            'DebitAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DebitAccount,
                    request_deserializer=payments__pb2.requests.FromString,
                    response_serializer=payments__pb2.reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'payments.paymentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class paymentsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreditAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/payments.paymentsService/CreditAccount',
            payments__pb2.requests.SerializeToString,
            payments__pb2.reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DebitAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/payments.paymentsService/DebitAccount',
            payments__pb2.requests.SerializeToString,
            payments__pb2.reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
